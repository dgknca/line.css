.input-container {
  --back-bg: var(--gray);
  --border: var(--black);
  @include component-colors('.input');

  &.input-text {
    border: 2px solid var(--border);
    border-radius: var(--border-radius);
    background-color: var(--white);
    height: 35px;
    width: 100%;
    max-width: 300px;
    width: 100%;
    position: relative;
    transition: var(--transition);
    transform: translate3d(3px, -3px, 0);
    transform-style: preserve-3d;
    transform-origin: center;

    &::before {
      content: '';
      position: absolute;
      right: 0;
      top: 0;
      width: 100%;
      height: 100%;
      border-radius: var(--border-radius);
      transition: var(--transition);
      background-color: var(--back-bg);
      border: 2px solid var(--border);
      transform: translate3d(-3px, 3px, -0.1px);
      z-index: 1;
    }

    &:focus-within {
      transform: translate3d(-2px, 2px, 0);

      &::before {
        transform: translate3d(2px, -2px, -0.1px);
      }
    }

    input {
      border: none;
      outline: none;
      background: none;
      font-size: 1rem;
      padding: 6px 12px;
      position: absolute;
      left: 0;
      top: 0;
      height: 100%;
      width: 100%;
      z-index: 2;

      &::placeholder {
        color: var(--gray);
      }
    }
  }

  &.input-check {
    margin: 0 5px;

    span {
      display: block;
      width: 20px;
      height: 20px;
      position: relative;
      background-color: var(--white);
      border: 2px solid var(--border);
      cursor: pointer;
      transition: var(--transition);
      transform: translate3d(2px, -2px, 0);
      transform-style: preserve-3d;

      &::before {
        content: '';
        position: absolute;
        right: 0;
        top: 0;
        width: 100%;
        height: 100%;
        border-radius: inherit;
        transition: inherit;
        border-radius: inherit;
        background-color: var(--back-bg);
        border: 2px solid var(--border);
        transform: translate3d(-2px, 2px, -0.1px);
      }
    }

    input {
      opacity: 0;
      pointer-events: none;
      position: absolute;

      &:checked + span {
        transform: translate3d(-2px, 2px, 0);
        background: var(--back-bg);

        &::before {
          transform: translate3d(2px, -2px, -0.1px);
        }
      }

      &[type='checkbox'] + span {
        border-radius: var(--border-radius);
      }
      &[type='radio'] + span {
        border-radius: 50%;
      }
    }
  }

  &.input-file {
    position: relative;

    &-drag-drop {
      width: 100%;
      height: 70px;
    }

    .file-button {
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 6px 12px;
    }

    input[type='file'] {
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      opacity: 0;
      cursor: pointer;
      outline: none;
      border: none;
      z-index: 2;

      &::-webkit-file-upload-button {
        display: none;
      }
    }

    .file-dummy {
      width: 100%;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      text-align: center;
      border: 2px dashed var(--border);
      border-radius: var(--border-radius);
      background-color: var(--gray-light);
    }

    .file-dummy,
    .file-button {
      .file-success {
        display: none;
      }
    }

    .input-file-browse {
      text-decoration: underline;
      color: var(--blue-dark);
    }

    &:hover {
      .file-dummy {
        background-color: rgba(196, 196, 196, 0.15);
      }

      .file-button {
        transform: translate3d(-2px, 2px, 0);

        &::before {
          transform: translate3d(2px, -2px, -0.1px);
        }
      }
    }

    input[type='file']:valid + .file-dummy {
      background-color: var(--green-light);
      border: 2px solid var(--green-dark);
    }
    input[type='file']:valid + .file-button {
      --border: var(--green-dark);
      transform: translate3d(-2px, 2px, 0);

      &::before {
        transform: translate3d(2px, -2px, -0.1px);
      }
    }

    input[type='file']:valid + .file-dummy,
    input[type='file']:valid + .file-button {
      .file-success {
        display: inline-block;
      }
      .file-default {
        display: none;
      }
    }
  }
}
